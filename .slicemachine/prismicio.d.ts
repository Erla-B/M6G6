// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Navigation documents */
type NavigationDocumentData = Record<string, never>;
/**
 * Navigation document from Prismic
 *
 * - **API ID**: `navigation`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type NavigationDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<NavigationDocumentData>, "navigation", Lang>;
/** Content for Page documents */
interface PageDocumentData {
    /**
     * title field in *Page*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: page.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Slice Zone field in *Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = CounterCalloutSlice | ScrollZoomImagesSlice | HeroSlice | IconLineThingSlice;
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;
export type AllDocumentTypes = NavigationDocument | PageDocument;
/**
 * Primary content in CounterCallout → Primary
 *
 */
interface CounterCalloutSliceDefaultPrimary {
    /**
     * Body field in *CounterCallout → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: counter_callout.primary.body
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    body: prismicT.RichTextField;
    /**
     * Number field in *CounterCallout → Primary*
     *
     * - **Field Type**: Number
     * - **Placeholder**: *None*
     * - **API ID Path**: counter_callout.primary.number
     * - **Documentation**: https://prismic.io/docs/core-concepts/number
     *
     */
    number: prismicT.NumberField;
}
/**
 * Default variation for CounterCallout Slice
 *
 * - **API ID**: `default`
 * - **Description**: `CounterCallout`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CounterCalloutSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<CounterCalloutSliceDefaultPrimary>, never>;
/**
 * Slice variation for *CounterCallout*
 *
 */
type CounterCalloutSliceVariation = CounterCalloutSliceDefault;
/**
 * CounterCallout Shared Slice
 *
 * - **API ID**: `counter_callout`
 * - **Description**: `CounterCallout`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CounterCalloutSlice = prismicT.SharedSlice<"counter_callout", CounterCalloutSliceVariation>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceDefaultPrimary {
    /**
     * Title field in *Hero → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: hero.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Body field in *Hero → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: hero.primary.body
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    body: prismicT.RichTextField;
    /**
     * Primary Button Text field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.primaryButtonText
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    primaryButtonText: prismicT.KeyTextField;
    /**
     * Primary Button Link field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.primaryButtonLink
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    primaryButtonLink: prismicT.KeyTextField;
    /**
     * Secondary Button Text field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.secondaryButtonText
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    secondaryButtonText: prismicT.KeyTextField;
    /**
     * Secondary Button Link field in *Hero → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.secondaryButtonLink
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    secondaryButtonLink: prismicT.KeyTextField;
    /**
     * icon1 field in *Hero → Primary*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.icon1
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    icon1: prismicT.SelectField<"react" | "vuejs">;
}
/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<HeroSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Hero*
 *
 */
type HeroSliceVariation = HeroSliceDefault;
/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSlice = prismicT.SharedSlice<"hero", HeroSliceVariation>;
/**
 * Primary content in LogosCalllout → Primary
 *
 */
interface IconLineThingSliceDefaultPrimary {
    /**
     * Title field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: icon_line_thing.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * quoteImage field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.primary.quoteImage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    quoteImage: prismicT.ImageField<never>;
    /**
     * Quote Name field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.primary.quoteName
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    quoteName: prismicT.KeyTextField;
    /**
     * Quote Text field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.primary.quoteText
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    quoteText: prismicT.KeyTextField;
    /**
     * icon1 field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.primary.icon1
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    icon1: prismicT.SelectField<"shopify" | "vuejs" | "nextjs" | "postgresql">;
    /**
     * Quote Title field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.primary.quoteTitle
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    quoteTitle: prismicT.KeyTextField;
    /**
     * Body field in *LogosCalllout → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.primary.body
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    body: prismicT.KeyTextField;
}
/**
 * Item in LogosCalllout → Items
 *
 */
export interface IconLineThingSliceDefaultItem {
    /**
     * logo field in *LogosCalllout → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: icon_line_thing.items[].logo
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    logo: prismicT.ImageField<never>;
}
/**
 * Default variation for LogosCalllout Slice
 *
 * - **API ID**: `default`
 * - **Description**: `IconLineThing`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type IconLineThingSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<IconLineThingSliceDefaultPrimary>, Simplify<IconLineThingSliceDefaultItem>>;
/**
 * Slice variation for *LogosCalllout*
 *
 */
type IconLineThingSliceVariation = IconLineThingSliceDefault;
/**
 * LogosCalllout Shared Slice
 *
 * - **API ID**: `icon_line_thing`
 * - **Description**: `IconLineThing`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type IconLineThingSlice = prismicT.SharedSlice<"icon_line_thing", IconLineThingSliceVariation>;
/**
 * Primary content in ScrollZoomImages → Primary
 *
 */
interface ScrollZoomImagesSliceDefaultPrimary {
    /**
     * Top Image field in *ScrollZoomImages → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: scroll_zoom_images.primary.topImage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    topImage: prismicT.ImageField<never>;
    /**
     * Bottom Image field in *ScrollZoomImages → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: scroll_zoom_images.primary.bottomImage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    bottomImage: prismicT.ImageField<never>;
    /**
     * icon1 field in *ScrollZoomImages → Primary*
     *
     * - **Field Type**: Select
     * - **Placeholder**: Name of the icon
     * - **API ID Path**: scroll_zoom_images.primary.icon1
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    icon1: prismicT.SelectField<"contentful" | "shopify" | "algolia" | "react" | "vuejs">;
}
/**
 * Default variation for ScrollZoomImages Slice
 *
 * - **API ID**: `default`
 * - **Description**: `ScrollZoomImages`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ScrollZoomImagesSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ScrollZoomImagesSliceDefaultPrimary>, never>;
/**
 * Slice variation for *ScrollZoomImages*
 *
 */
type ScrollZoomImagesSliceVariation = ScrollZoomImagesSliceDefault;
/**
 * ScrollZoomImages Shared Slice
 *
 * - **API ID**: `scroll_zoom_images`
 * - **Description**: `ScrollZoomImages`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ScrollZoomImagesSlice = prismicT.SharedSlice<"scroll_zoom_images", ScrollZoomImagesSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { NavigationDocumentData, NavigationDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, AllDocumentTypes, CounterCalloutSliceDefaultPrimary, CounterCalloutSliceDefault, CounterCalloutSliceVariation, CounterCalloutSlice, HeroSliceDefaultPrimary, HeroSliceDefault, HeroSliceVariation, HeroSlice, IconLineThingSliceDefaultPrimary, IconLineThingSliceDefaultItem, IconLineThingSliceDefault, IconLineThingSliceVariation, IconLineThingSlice, ScrollZoomImagesSliceDefaultPrimary, ScrollZoomImagesSliceDefault, ScrollZoomImagesSliceVariation, ScrollZoomImagesSlice };
    }
}
